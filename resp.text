from bs4 import BeautifulSoup
import re

def diagnosticar(html):
    soup = BeautifulSoup(html, "html.parser")

    print("TITLE:", soup.title.string if soup.title else None)

    # 1) Meta refresh (redirige desde HTML)
    meta_refresh = soup.find("meta", attrs={"http-equiv": lambda v: v and v.lower()=="refresh"})
    if meta_refresh:
        print("META REFRESH:", meta_refresh.get("content"))

    # 2) Redirección por JS (indicativa)
    js = soup.find_all("script")
    js_text = "\n".join(s.get_text(" ", strip=True) for s in js if s)
    if re.search(r"location\s*\.href\s*=", js_text, flags=re.I) or \
       re.search(r"window\s*\.location\s*=", js_text, flags=re.I):
        print("POSIBLE JS REDIRECT detectado en <script>")

    # 3) Canonical (tu código podría estar siguiéndola)
    canon = soup.find("link", rel=lambda v: v and "canonical" in v.lower())
    print("CANONICAL:", canon.get("href") if canon else None)

    # 4) <base> (afecta cómo resuelves enlaces relativos)
    base = soup.find("base", href=True)
    print("BASE HREF:", base["href"] if base else None)

    # 5) Hreflang alternates (a veces eliges idioma y vas a otra URL)
    alternates = [l.get("href") for l in soup.find_all("link", rel="alternate") if l.get("hreflang")]
    if alternates:
        print("ALTERNATES (hreflang):", alternates[:5], "… total:", len(alternates))

    # 6) Señales de protección/CDN (intersticiales)
    if "cf-chl" in js_text or "Just a moment" in html or "Cloudflare" in html:
        print("Posible intersticial/anti-bot detectado")
